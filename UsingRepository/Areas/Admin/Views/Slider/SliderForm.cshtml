@model UsingRepository.Core.ViewModels.SliderViewModel

@{
    ViewBag.Title = Model.Heading;
}

<h2 class="alert alert-info">@Model.Heading</h2>

@using (Html.BeginForm(Model.Action, "Slider", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.RowVersion)


    <div class="row">
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ImagePath,null,"PostedFileBase", new { htmlAttributes = new { @class = "form-control" ,type="file"} })
                    @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                </div>
                @if (Model.Id != 0)
                {
                    <img src="@Url.Content(Model.ImagePath)" id="imgReader" class="img-responsive img-thumbnail"/>
                }
                else
                {
                    <img style="display: none" src="" id="imgReader" class="img-responsive img-thumbnail"/>
                                        
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.Header, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Header, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Header, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Paragraph, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Paragraph, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Paragraph, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <div class="">
                        <input type="submit" value="Save" class="btn btn-Black" />
                    </div>
                </div>
            </div>

        </div>
       
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-Black btn-lg" })

</div>

@section scripts
{
@Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            ShowImageController.init("PostedFileBase");
        });

    </script>
}
